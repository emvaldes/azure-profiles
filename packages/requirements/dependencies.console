$ python -m packages.requirements.dependencies ;

[CALL] packages/appflow_tracer/tracing ( file_utils.manage_logfiles(CONFIGS) )
[CALL] packages/appflow_tracer/tracing (setup_logging)[227] -> packages/appflow_tracer/lib/file_utils (manage_logfiles)[94]
{
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/file_utils ( log_files = sorted( )
[CALL] packages/appflow_tracer/lib/file_utils (manage_logfiles)[120] -> packages/appflow_tracer/lib/file_utils (<lambda>)[122]
{
  "f": "/Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/logs/requirements/dependencies_20250216142925.log"
}
[RETURN] packages/appflow_tracer/lib/file_utils[122] ( key=lambda f: f.stat().st_mtime ) -> float:
1739741365.2469995
[RETURN] packages/appflow_tracer/lib/file_utils[118] ( for log_subdir in logs_basedir.iterdir(): ) -> NoneType: None

[CALL] packages/requirements/dependencies ( args = parse_arguments() )
[CALL] packages/requirements/dependencies (main)[352] -> packages/requirements/dependencies (parse_arguments)[239]
[RETURN] packages/requirements/dependencies[263] ( return parser.parse_args() ) -> Namespace:
{
  "requirements_file": "./packages/requirements/requirements.json"
}

[CALL] packages/requirements/dependencies ( log_utils.log_message("üîç Starting dependency installation process...", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (main)[353] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "üîç Starting dependency installation process...",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "üîç Starting dependency installation process...",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x101f88b80>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
üîç Starting dependency installation process...

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x101f88b80>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
üîç Starting dependency installation process...
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None

[CALL] packages/requirements/dependencies ( install_requirements(args.requirements_file) )
[CALL] packages/requirements/dependencies (main)[354] -> packages/requirements/dependencies (install_requirements)[168]
{
  "requirements_file": "./packages/requirements/requirements.json"
}

[CALL] packages/requirements/dependencies ( dependencies = load_requirements(requirements_file) )
[CALL] packages/requirements/dependencies (install_requirements)[186] -> packages/requirements/dependencies (load_requirements)[87]
{
  "requirements_file": "./packages/requirements/requirements.json"
}
[RETURN] packages/requirements/dependencies[115] ( with open(requirements_path, "r") as f: ) -> list:
[
  {
    "package": "azure-identity",
    "version": {
      "target": "1.15.0",
      "status": false
    }
  },
  {
    "package": "azure-mgmt-resource",
    "version": {
      "target": "23.0.1",
      "status": false
    }
  },
  {
    "package": "pytz",
    "version": {
      "target": "2025.1",
      "status": false
    }
  },
  {
    "package": "python-dotenv",
    "version": {
      "target": "1.0.1",
      "status": false
    }
  },
  {
    "package": "setuptools",
    "version": {
      "target": "75.8.0",
      "status": false
    }
  }
]

[CALL] packages/requirements/dependencies ( if is_package_installed(package, version): )
[CALL] packages/requirements/dependencies (install_requirements)[196] -> packages/requirements/dependencies (is_package_installed)[201]
{
  "package": "azure-identity",
  "version_info": {
    "target": "1.15.0",
    "status": false
  }
}

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"{package}=={version} is already installed.", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (is_package_installed)[230] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "azure-identity==1.15.0 is already installed.",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "azure-identity==1.15.0 is already installed.",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x101ffd690>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
azure-identity==1.15.0 is already installed.

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x101ffd690>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
azure-identity==1.15.0 is already installed.
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
[RETURN] packages/requirements/dependencies[231] ( return True ) -> bool: True
true

[CALL] packages/requirements/dependencies ( if is_package_installed(package, version): )
[CALL] packages/requirements/dependencies (install_requirements)[196] -> packages/requirements/dependencies (is_package_installed)[201]
{
  "package": "azure-mgmt-resource",
  "version_info": {
    "target": "23.0.1",
    "status": false
  }
}

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"{package}=={version} is already installed.", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (is_package_installed)[230] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "azure-mgmt-resource==23.0.1 is already installed.",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "azure-mgmt-resource==23.0.1 is already installed.",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x101ffd690>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
azure-mgmt-resource==23.0.1 is already installed.

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x101ffd690>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
azure-mgmt-resource==23.0.1 is already installed.
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
[RETURN] packages/requirements/dependencies[231] ( return True ) -> bool: True
true

[CALL] packages/requirements/dependencies ( if is_package_installed(package, version): )
[CALL] packages/requirements/dependencies (install_requirements)[196] -> packages/requirements/dependencies (is_package_installed)[201]
{
  "package": "pytz",
  "version_info": {
    "target": "2025.1",
    "status": false
  }
}

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"{package}=={version} is already installed.", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (is_package_installed)[230] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "pytz==2025.1 is already installed.",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "pytz==2025.1 is already installed.",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10208c580>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
pytz==2025.1 is already installed.

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10208c580>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
pytz==2025.1 is already installed.
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
[RETURN] packages/requirements/dependencies[231] ( return True ) -> bool: True
true

[CALL] packages/requirements/dependencies ( if is_package_installed(package, version): )
[CALL] packages/requirements/dependencies (install_requirements)[196] -> packages/requirements/dependencies (is_package_installed)[201]
{
  "package": "python-dotenv",
  "version_info": {
    "target": "1.0.1",
    "status": false
  }
}

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"{package}=={version} is already installed.", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (is_package_installed)[230] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "python-dotenv==1.0.1 is already installed.",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "python-dotenv==1.0.1 is already installed.",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10208c580>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
python-dotenv==1.0.1 is already installed.

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10208c580>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
python-dotenv==1.0.1 is already installed.
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
[RETURN] packages/requirements/dependencies[231] ( return True ) -> bool: True
true

[CALL] packages/requirements/dependencies ( if is_package_installed(package, version): )
[CALL] packages/requirements/dependencies (install_requirements)[196] -> packages/requirements/dependencies (is_package_installed)[201]
{
  "package": "setuptools",
  "version_info": {
    "target": "75.8.0",
    "status": false
  }
}

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"{package}=={version} is already installed.", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (is_package_installed)[230] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "setuptools==75.8.0 is already installed.",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "setuptools==75.8.0 is already installed.",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10208c580>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
setuptools==75.8.0 is already installed.

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10208c580>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
setuptools==75.8.0 is already installed.
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
[RETURN] packages/requirements/dependencies[231] ( return True ) -> bool: True
true
[RETURN] packages/requirements/dependencies[192] ( for dep in dependencies: ) -> NoneType: None

[CALL] packages/requirements/dependencies ( update_installed_packages(args.requirements_file, config_filepath) )
[CALL] packages/requirements/dependencies (main)[355] -> packages/requirements/dependencies (update_installed_packages)[265]
{
  "requirements_file": "./packages/requirements/requirements.json",
  "config_filepath": "/Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json"
}

[CALL] packages/requirements/dependencies ( dependencies = load_requirements(requirements_file) )
[CALL] packages/requirements/dependencies (update_installed_packages)[287] -> packages/requirements/dependencies (load_requirements)[87]
{
  "requirements_file": "./packages/requirements/requirements.json"
}
[RETURN] packages/requirements/dependencies[115] ( with open(requirements_path, "r") as f: ) -> list:
[
  {
    "package": "azure-identity",
    "version": {
      "target": "1.15.0",
      "status": false
    }
  },
  {
    "package": "azure-mgmt-resource",
    "version": {
      "target": "23.0.1",
      "status": false
    }
  },
  {
    "package": "pytz",
    "version": {
      "target": "2025.1",
      "status": false
    }
  },
  {
    "package": "python-dotenv",
    "version": {
      "target": "1.0.1",
      "status": false
    }
  },
  {
    "package": "setuptools",
    "version": {
      "target": "75.8.0",
      "status": false
    }
  }
]

[CALL] packages/requirements/dependencies ( print(f'Installed JSON file: {config_filepath}') )
[CALL] packages/requirements/dependencies (update_installed_packages)[316] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10209f910>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
Installed JSON file: /Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10209f910>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
Installed JSON file: /Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"üìÑ Installed package status updated in {config_filepath}", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (update_installed_packages)[319] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "üìÑ Installed package status updated in /Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "üìÑ Installed package status updated in /Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x1020cd990>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
üìÑ Installed package status updated in /Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x1020cd990>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
üìÑ Installed package status updated in /Users/emvaldes/.repos/azure/workspaces/azure-profiles/python/packages/requirements/installed.json
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
[RETURN] packages/requirements/dependencies[319] ( log_utils.log_message(f"üìÑ Installed package status updated in {config_filepath}", configs=CONFIGS) ) -> NoneType: None

[CALL] packages/requirements/dependencies ( log_utils.log_message(f"üìÇ Logs are being saved in: {CONFIGS["logging"].get("log_filename")}", configs=CONFIGS) )
[CALL] packages/requirements/dependencies (main)[356] -> packages/appflow_tracer/lib/log_utils (log_message)[72]
{
  "message": "üìÇ Logs are being saved in: logs/requirements/dependencies_20250216142925.log",
  "log_category": "INFO",
  "json_data": null,
  "serialize_json": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  },
  "handler": null
}

[CALL] packages/appflow_tracer/lib/log_utils ( output_console(message, log_category, json_data or False, configs)  # Write to console )
[CALL] packages/appflow_tracer/lib/log_utils (log_message)[125] -> packages/appflow_tracer/lib/log_utils (output_console)[160]
{
  "message": "üìÇ Logs are being saved in: logs/requirements/dependencies_20250216142925.log",
  "log_category": "INFO",
  "json_data": false,
  "configs": {
    "colors": {
      "CALL": "\u001b[92m",
      "RETURN": "\u001b[93m",
      "IMPORT": "\u001b[94m",
      "DEBUG": "\u001b[96m",
      "INFO": "\u001b[97m",
      "WARNING": "\u001b[91m",
      "ERROR": "\u001b[31m",
      "CRITICAL": "\u001b[41m",
      "RESET": "\u001b[0m"
    },
    "logging": {
      "enable": true,
      "max_logfiles": 5,
      "package_name": "requirements",
      "module_name": "dependencies",
      "logs_dirname": "logs/requirements",
      "log_filename": "logs/requirements/dependencies_20250216142925.log"
    },
    "tracing": {
      "enable": true
    },
    "stats": {
      "created": "2025-02-16T21:29:04.207636",
      "updated": "2025-02-16T21:29:25.221046"
    }
  }
}

[CALL] packages/appflow_tracer/lib/log_utils ( print(console_message)  # Print colored message )
[CALL] packages/appflow_tracer/lib/log_utils (output_console)[192] -> packages/appflow_tracer/tracing (<lambda>)[206]

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10209feb0>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> str:
üìÇ Logs are being saved in: logs/requirements/dependencies_20250216142925.log

[CALL] packages/appflow_tracer/tracing ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) )
[CALL] packages/appflow_tracer/tracing (<lambda>)[206] -> packages/appflow_tracer/tracing (<genexpr>)[206]
{
  ".0": "<tuple_iterator object at 0x10209feb0>"
}
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
üìÇ Logs are being saved in: logs/requirements/dependencies_20250216142925.log
[RETURN] packages/appflow_tracer/tracing[206] ( builtins.print = lambda *args, **kwargs: logger.info(" ".join(str(arg) for arg in args)) ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[193] ( if json_data: ) -> NoneType: None
[RETURN] packages/appflow_tracer/lib/log_utils[125] ( output_console(message, log_category, json_data or False, configs)  # Write to console ) -> NoneType: None
